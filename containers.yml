---
- name: Install Docker, download images, and start containers
  hosts: localhost
  become: true
  # vars:
  #   ansible_python_interpreter: /usr/bin/python

  tasks:
  # Install the first required application on the virtual machine
  - name: Install aptitude
    apt:
      name: aptitude
      state: latest
      update_cache: true

  # Install docker prerequisites   
  - name: Install required system packages
    apt:
      pkg:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - python3-pip
        - virtualenv
        - python3-setuptools
      state: latest
      update_cache: true

  # Install docker keys to suppress the warning and error messages
  - name: Add Docker GPG apt Key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
    
    # Add the repository to use when downloading Docker binaries
  - name: Add Docker Repository
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu focal stable
      state: present

    # Update cache and install Docker
  - name: Update apt and install docker-ce
    apt:
      name: docker-ce
      state: latest
      update_cache: true

    # Final step for Docker, install the module for Python
  - name: Install Docker Module for Python
    pip:
        name: docker
        state: latest
  - name: Download MySQL Database image
    docker_image:
      name: mysql:5
      pull: yes
  - name: Download Web Application image
    docker_image:
      name: eugenefltk/todoappwithlogin
      pull: yes
  - name: Create Docker network
    docker_network:
      name: team7-network
      state: present
  - name: Start MySQL container
    docker_container:
      name: mysql-db
      image: mysql:5
      env:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_TLS_VERSION: "TLSv1.2"
      networks:
        - name:team7-network
      state: started
  - name: Start Web Application container
    docker_container:
      name: todoappwithlogin
      image: eugenefltk/todoappwithlogin
      env:
        DB_HOST: localhost
        DB_PORT: 3306
        DB_USER: root
        DB_USER_PASSWORD: root
      ports:
        - "8080:8080"
      depends_on:
        - mysql-db
      networks:
        - name:team7-network
      state: started
